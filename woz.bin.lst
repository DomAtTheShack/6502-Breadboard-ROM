Sections:
00: "org0001:8000" (8000-8100)


Source: "wozmon.s"
                        	     1: ;  The WOZ Monitor for the Apple 1
                        	     2: ;  Written by Steve Wozniak in 1976
                        	     3: 
                        	     4: 
                        	     5: ; Page 0 Variables
                        	     6: 
                        	     7: XAML            = $24           ;  Last "opened" location Low
                        	     8: XAMH            = $25           ;  Last "opened" location High
                        	     9: STL             = $26           ;  Store address Low
                        	    10: STH             = $27           ;  Store address High
                        	    11: L               = $28           ;  Hex value parsing Low
                        	    12: H               = $29           ;  Hex value parsing High
                        	    13: YSAV            = $2A           ;  Used to see if hex value is given
                        	    14: MODE            = $2B           ;  $00=XAM, $7F=STOR, $AE=BLOCK XAM
                        	    15: 
                        	    16: 
                        	    17: ; Other Variables
                        	    18: 
                        	    19: IN              = $0200         ;  Input buffer to $027F
                        	    20: KBD             = $4000         ;  PIA.A keyboard input
                        	    21: KBDCR           = $4000         ;  PIA.A keyboard control register
                        	    22: DSP             = $5001         ;  PIA.B display output register
                        	    23: DSPCR           = $5000         ;  PIA.B display control register
                        	    24: 
                        	    25:                .org $8000
                        	    26: 
00:8000 D8              	    27: RESET:          CLD             ; Clear decimal arithmetic mode.
00:8001 58              	    28:                 CLI
00:8002 A07F            	    29:                 LDY #$7F        ; Mask for DSP data direction register.
00:8004 8C0150          	    30:                 STY DSP         ; Set it up.
00:8007 A9A7            	    31:                 LDA #$A7        ; KBD and DSP control register mask.
00:8009 8D0040          	    32:                 STA KBDCR       ; Enable interrupts, set CA1, CB1, for
00:800C 8D0050          	    33:                 STA DSPCR       ;  positive edge sense/output mode.
00:800F C9DF            	    34: NOTCR:          CMP #'_'+$80    ; "_"?
00:8011 F013            	    35:                 BEQ BACKSPACE   ; Yes.
00:8013 C99B            	    36:                 CMP #$9B        ; ESC?
00:8015 F003            	    37:                 BEQ ESCAPE      ; Yes.
00:8017 C8              	    38:                 INY             ; Advance text index.
00:8018 100F            	    39:                 BPL NEXTCHAR    ; Auto ESC if > 127.
00:801A A9DC            	    40: ESCAPE:         LDA #'\'+$80    ; "\".
00:801C 20EF80          	    41:                 JSR ECHO        ; Output it.
00:801F A98D            	    42: GETLINE:        LDA #$8D        ; CR.
00:8021 20EF80          	    43:                 JSR ECHO        ; Output it.
00:8024 A001            	    44:                 LDY #$01        ; Initialize text index.
00:8026 88              	    45: BACKSPACE:      DEY             ; Back up text index.
00:8027 30F6            	    46:                 BMI GETLINE     ; Beyond start of line, reinitialize.
00:8029 AD0040          	    47: NEXTCHAR:       LDA KBDCR       ; Key ready?
00:802C 10FB            	    48:                 BPL NEXTCHAR    ; Loop until ready.
00:802E AD0040          	    49:                 LDA KBD         ; Load character. B7 should be ‘1’.
00:8031 990002          	    50:                 STA IN,Y        ; Add to text buffer.
00:8034 20EF80          	    51:                 JSR ECHO        ; Display character.
00:8037 C98D            	    52:                 CMP #$8D        ; CR?
00:8039 D0D4            	    53:                 BNE NOTCR       ; No.
00:803B A0FF            	    54:                 LDY #$FF        ; Reset text index.
00:803D A900            	    55:                 LDA #$00        ; For XAM mode.
00:803F AA              	    56:                 TAX             ; 0->X.
00:8040 0A              	    57: SETSTOR:        ASL             ; Leaves $7B if setting STOR mode.
00:8041 852B            	    58: SETMODE:        STA MODE        ; $00=XAM, $7B=STOR, $AE=BLOCK XAM.
00:8043 C8              	    59: BLSKIP:         INY             ; Advance text index.
00:8044 B90002          	    60: NEXTITEM:       LDA IN,Y        ; Get character.
00:8047 C98D            	    61:                 CMP #$8D        ; CR?
00:8049 F0D4            	    62:                 BEQ GETLINE     ; Yes, done this line.
00:804B C9AE            	    63:                 CMP #'.'+$80    ; "."?
00:804D 90F4            	    64:                 BCC BLSKIP      ; Skip delimiter.
00:804F F0F0            	    65:                 BEQ SETMODE     ; Set BLOCK XAM mode.
00:8051 C9BA            	    66:                 CMP #':'+$80    ; ":"?
00:8053 F0EB            	    67:                 BEQ SETSTOR     ; Yes. Set STOR mode.
00:8055 C9D2            	    68:                 CMP #'R'+$80    ; "R"?
00:8057 F03B            	    69:                 BEQ RUN         ; Yes. Run user program.
00:8059 8628            	    70:                 STX L           ; $00->L.
00:805B 8629            	    71:                 STX H           ;  and H.
00:805D 842A            	    72:                 STY YSAV        ; Save Y for comparison.
00:805F B90002          	    73: NEXTHEX:        LDA IN,Y        ; Get character for hex test.
00:8062 49B0            	    74:                 EOR #$B0        ; Map digits to $0-9.
00:8064 C90A            	    75:                 CMP #$0A        ; Digit?
00:8066 9006            	    76:                 BCC DIG         ; Yes.
00:8068 6988            	    77:                 ADC #$88        ; Map letter "A"-"F" to $FA-FF.
00:806A C9FA            	    78:                 CMP #$FA        ; Hex letter?
00:806C 9011            	    79:                 BCC NOTHEX      ; No, character not hex.
00:806E 0A              	    80: DIG:            ASL
00:806F 0A              	    81:                 ASL             ; Hex digit to MSD of A.
00:8070 0A              	    82:                 ASL
00:8071 0A              	    83:                 ASL
00:8072 A204            	    84:                 LDX #$04        ; Shift count.
00:8074 0A              	    85: HEXSHIFT:       ASL             ; Hex digit left, MSB to carry.
00:8075 2628            	    86:                 ROL L           ; Rotate into LSD.
00:8077 2629            	    87:                 ROL H           ; Rotate into MSD’s.
00:8079 CA              	    88:                 DEX             ; Done 4 shifts?
00:807A D0F8            	    89:                 BNE HEXSHIFT    ; No, loop.
00:807C C8              	    90:                 INY             ; Advance text index.
00:807D D0E0            	    91:                 BNE NEXTHEX     ; Always taken. Check next character for hex.
00:807F C42A            	    92: NOTHEX:         CPY YSAV        ; Check if L, H empty (no hex digits).
00:8081 F097            	    93:                 BEQ ESCAPE      ; Yes, generate ESC sequence.
00:8083 242B            	    94:                 BIT MODE        ; Test MODE byte.
00:8085 5010            	    95:                 BVC NOTSTOR     ; B6=0 STOR, 1 for XAM and BLOCK XAM
00:8087 A528            	    96:                 LDA L           ; LSD’s of hex data.
00:8089 8126            	    97:                 STA (STL,X)     ; Store at current ‘store index’.
00:808B E626            	    98:                 INC STL         ; Increment store index.
00:808D D0B5            	    99:                 BNE NEXTITEM    ; Get next item. (no carry).
00:808F E627            	   100:                 INC STH         ; Add carry to ‘store index’ high order.
00:8091 4C4480          	   101: TONEXTITEM:     JMP NEXTITEM    ; Get next command item.
00:8094 6C2400          	   102: RUN:            JMP (XAML)      ; Run at current XAM index.
00:8097 302B            	   103: NOTSTOR:        BMI XAMNEXT     ; B7=0 for XAM, 1 for BLOCK XAM.
00:8099 A202            	   104:                 LDX #$02        ; Byte count.
00:809B B527            	   105: SETADR:         LDA L-1,X       ; Copy hex data to
00:809D 9525            	   106:                 STA STL-1,X     ;  ‘store index’.
00:809F 9523            	   107:                 STA XAML-1,X    ; And to ‘XAM index’.
00:80A1 CA              	   108:                 DEX             ; Next of 2 bytes.
00:80A2 D0F7            	   109:                 BNE SETADR      ; Loop unless X=0.
00:80A4 D014            	   110: NXTPRNT:        BNE PRDATA      ; NE means no address to print.
00:80A6 A98D            	   111:                 LDA #$8D        ; CR.
00:80A8 20EF80          	   112:                 JSR ECHO        ; Output it.
00:80AB A525            	   113:                 LDA XAMH        ; ‘Examine index’ high-order byte.
00:80AD 20DC80          	   114:                 JSR PRBYTE      ; Output it in hex format.
00:80B0 A524            	   115:                 LDA XAML        ; Low-order ‘examine index’ byte.
00:80B2 20DC80          	   116:                 JSR PRBYTE      ; Output it in hex format.
00:80B5 A9BA            	   117:                 LDA #':'+$80    ; ":".
00:80B7 20EF80          	   118:                 JSR ECHO        ; Output it.
00:80BA A9A0            	   119: PRDATA:         LDA #$A0        ; Blank.
00:80BC 20EF80          	   120:                 JSR ECHO        ; Output it.
00:80BF A124            	   121:                 LDA (XAML,X)    ; Get data byte at ‘examine index’.
00:80C1 20DC80          	   122:                 JSR PRBYTE      ; Output it in hex format.
00:80C4 862B            	   123: XAMNEXT:        STX MODE        ; 0->MODE (XAM mode).
00:80C6 A524            	   124:                 LDA XAML
00:80C8 C528            	   125:                 CMP L           ; Compare ‘examine index’ to hex data.
00:80CA A525            	   126:                 LDA XAMH
00:80CC E529            	   127:                 SBC H
00:80CE B0C1            	   128:                 BCS TONEXTITEM  ; Not less, so no more data to output.
00:80D0 E624            	   129:                 INC XAML
00:80D2 D002            	   130:                 BNE MOD8CHK     ; Increment ‘examine index’.
00:80D4 E625            	   131:                 INC XAMH
00:80D6 A524            	   132: MOD8CHK:        LDA XAML        ; Check low-order ‘examine index’ byte
00:80D8 2907            	   133:                 AND #$07        ;  For MOD 8=0
00:80DA 10C8            	   134:                 BPL NXTPRNT     ; Always taken.
00:80DC 48              	   135: PRBYTE:         PHA             ; Save A for LSD.
00:80DD 4A              	   136:                 LSR
00:80DE 4A              	   137:                 LSR
00:80DF 4A              	   138:                 LSR             ; MSD to LSD position.
00:80E0 4A              	   139:                 LSR
00:80E1 20E580          	   140:                 JSR PRHEX       ; Output hex digit.
00:80E4 68              	   141:                 PLA             ; Restore A.
00:80E5 290F            	   142: PRHEX:          AND #$0F        ; Mask LSD for hex print.
00:80E7 09B0            	   143:                 ORA #'0'+$80    ; Add "0".
00:80E9 C9BA            	   144:                 CMP #$BA        ; Digit?
00:80EB 9002            	   145:                 BCC ECHO        ; Yes, output it.
00:80ED 6906            	   146:                 ADC #$06        ; Add offset for letter.
00:80EF 2C0150          	   147: ECHO:           BIT DSP         ; DA bit (B7) cleared yet?
00:80F2 30FB            	   148:                 BMI ECHO        ; No, wait for display.
00:80F4 8D0150          	   149:                 STA DSP         ; Output character. Sets DA.
00:80F7 60              	   150:                 RTS             ; Return.
                        	   151: 
00:80F8 00              	   152:                 BRK             ; unused
00:80F9 00              	   153:                 BRK             ; unused
                        	   154: 
                        	   155: ; Interrupt Vectors
                        	   156: 
00:80FA 000F            	   157:                 .WORD $0F00     ; NMI
00:80FC 0080            	   158:                 .WORD RESET     ; RESET
00:80FE 0000            	   159:                 .WORD $0000     ; BRK/IRQ


Symbols by name:
BACKSPACE                        A:8026
BLSKIP                           A:8043
DIG                              A:806E
DSP                              E:5001
DSPCR                            E:5000
ECHO                             A:80EF
ESCAPE                           A:801A
GETLINE                          A:801F
H                                E:0029
HEXSHIFT                         A:8074
IN                               E:0200
KBD                              E:4000
KBDCR                            E:4000
L                                E:0028
MOD8CHK                          A:80D6
MODE                             E:002B
NEXTCHAR                         A:8029
NEXTHEX                          A:805F
NEXTITEM                         A:8044
NOTCR                            A:800F
NOTHEX                           A:807F
NOTSTOR                          A:8097
NXTPRNT                          A:80A4
PRBYTE                           A:80DC
PRDATA                           A:80BA
PRHEX                            A:80E5
RESET                            A:8000
RUN                              A:8094
SETADR                           A:809B
SETMODE                          A:8041
SETSTOR                          A:8040
STH                              E:0027
STL                              E:0026
TONEXTITEM                       A:8091
XAMH                             E:0025
XAML                             E:0024
XAMNEXT                          A:80C4
YSAV                             E:002A

Symbols by value:
0024 XAML
0025 XAMH
0026 STL
0027 STH
0028 L
0029 H
002A YSAV
002B MODE
0200 IN
4000 KBD
4000 KBDCR
5000 DSPCR
5001 DSP
8000 RESET
800F NOTCR
801A ESCAPE
801F GETLINE
8026 BACKSPACE
8029 NEXTCHAR
8040 SETSTOR
8041 SETMODE
8043 BLSKIP
8044 NEXTITEM
805F NEXTHEX
806E DIG
8074 HEXSHIFT
807F NOTHEX
8091 TONEXTITEM
8094 RUN
8097 NOTSTOR
809B SETADR
80A4 NXTPRNT
80BA PRDATA
80C4 XAMNEXT
80D6 MOD8CHK
80DC PRBYTE
80E5 PRHEX
80EF ECHO
