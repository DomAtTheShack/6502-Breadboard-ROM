MEMORY {
    ZP:     start = $0000, size = $0100, type = rw, define = yes;
    RAM:    start = $0200, size = $0600, type = rw, define = yes;

    IO_ACIA: start = $4000, size = $2000, type = rw, define = yes;  # ACIA range
    IO_6522: start = $6000, size = $2000, type = rw, define = yes;  # 6522 VIA range

    ROM:    start = $8000, size = $7FFA, file = %O, fill = yes, define = yes;
    VECTORS: start = $FFFA, size = $0006, file = %O, fill = yes, define = yes;
}

SEGMENTS {
    ZEROPAGE: load = ZP,      type = zp,  define = yes;
    STARTUP:  load = ROM,     type = ro,  define = yes, start = $8000;
    LOWCODE:  load = ROM,     type = ro,  define = yes, optional = yes;
    CODE:     load = ROM,     type = ro,  define = yes;
    RODATA:   load = ROM,     type = ro,  define = yes;
    DATA:     load = ROM,     run = RAM,  type = rw,  define = yes;
    BSS:      load = RAM,     type = bss, define = yes;
    VECTORS:  load = VECTORS, type = ro,  define = yes;
}

FEATURES {
    CONDES: segment = RODATA,
            type = constructor,
            label = __CONSTRUCTOR_TABLE__,
            count = __CONSTRUCTOR_COUNT__;
    CONDES: segment = RODATA,
            type = destructor,
            label = __DESTRUCTOR_TABLE__,
            count = __DESTRUCTOR_COUNT__;
}

SYMBOLS {
    # Define the stack size for the application
    __STACK_SIZE__: type = weak, value = $0100;

    # Address of the stack
    __STACKSTART__: type = weak, value = $0700;
    __STACKEND__:   type = weak, value = $07FF;
}